# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QaOOOMPL0PwYM3MTTE1azbpUbcaFnmcu

Import Libraries
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Processing and Collection"""

#loading csv data to pandas data frame
h_d = pd.read_csv('//content/heart_disease_data.csv')
#h_d = pd.read_csv('/content/heart-disease-dataset.csv')

h_d.head() #forst 5 rows and column

h_d.tail() #last 5 rows and column

h_d.shape

h_d.info()

h_d.isnull().sum()

h_d.describe()

"""1 --> Defective Heart

0 --> Healthy Heart
"""

h_d['target'].value_counts()

"""**Splitting the features and target**"""

X = h_d.drop(columns='target', axis=1)
Y = h_d['target']

print(X)

print(Y)

"""**Splitting the Data into Training Data and Test Data**"""

x_train , x_test , y_train , y_test = train_test_split(X,Y,test_size =0.2, stratify=Y, random_state=3)

print(X.shape, x_train.shape, x_test.shape)

"""**Model Training**

Logistic Regression
"""

model = LogisticRegression()

model.fit(x_train, y_train)

"""**Model Evaluation**

Accuracy Score
"""

#accuracy scire on training data
x_train_prediction = model.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction, y_train)

print('Accuracy on training data : ', training_data_accuracy)

#accuracy scire on test data
x_test_prediction = model.predict(x_test)
test_data_accuracy = accuracy_score(x_test_prediction, y_test)

print('Accuracy on test data : ', test_data_accuracy)

"""**Building a Predictive System**"""

input_data = (60,1,0,140,293,0,0,170,0,1.2,1,2,3)

#changing the input data into numpy array

input_as_numpy_array = np.asarray(input_data)

#reshaping the numpy array to predict for only instances

input_reshaped = input_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_reshaped)

print(prediction)

if(prediction[0] == 0):
  print('The preson have a Healthy Heart')
else:
  print('The Preson doesnot has a Heart Disease')

